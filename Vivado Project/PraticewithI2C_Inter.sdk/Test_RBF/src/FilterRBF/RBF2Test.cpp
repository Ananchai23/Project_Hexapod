//
// File: RBF2Test.cpp
//
// MATLAB Coder version            : 3.3
// C/C++ source code generated on  : 28-Mar-2018 17:31:11
//

// Include Files
#include "rt_nonfinite.h"
#include "MvAvgFilter.h"
#include "RBF2Test.h"

// Function Definitions

//
// Arguments    : const double data_TE[18]
// Return Type  : double
//
double RBF2Test(const double data_TE[18])
{
  double WalkControls;
  double y;
  int j;
  double d0;
  int i1;
  static const double a[18] = { 0.158896927376272, 0.456068896747456,
    0.953307761669971, 0.421451946814036, 0.862057539770677, 1.10524608136094,
    0.112278440962322, 0.390859457232926, 0.124282496292281, 0.421398662255868,
    -0.752035008715144, -1.06318431111156, -1.46119053619209, 0.009058977152534,
    -0.44317415762244, -0.378545147880182, -0.503797517484814, 1.39831006913199
  };

  static const double dv0[18] = { 0.0495020185406238, 0.0449192627446005,
    0.0488274239439829, 0.0339902907255824, 0.0294775506988009,
    0.0646459592615844, 0.032948499313995, 0.0307031781682395,
    0.0262332231530721, 0.11075904788366, 0.0933021862362704, 0.107713523812614,
    0.234063835782355, 0.0493737015359575, 0.0875198853293786,
    0.0668026908701765, 0.0941437937891305, 0.160945575882135 };

  static const double c[324] = { 0.150451743784177, 0.125989275942036,
    0.0946310179675008, 0.0841032814308559, 0.0974899487519275,
    0.0656572473281882, 0.124251013304867, 0.117003480615304, 0.0646388299242936,
    0.174558379039416, 0.140615222272666, 0.0857597434733352, 0.154856705808251,
    0.11031628199937, 0.0649210419759752, 0.152774880673383, 0.103244620588392,
    0.0737186959349194, 0.156455907434447, 0.0881769510464341,
    0.0732401624559812, 0.0819273856120935, 0.109919549115122,
    0.0717186713947411, 0.129653942584163, 0.135838067542751, 0.0675672912142073,
    0.129743923238322, 0.130226546746995, 0.0744835314952741, 0.160689088209671,
    0.121531143531414, 0.0564587704552613, 0.133159098066643, 0.0858251839490877,
    0.0641725665345588, 0.189515617778541, 0.0787044421812948,
    0.0632482198145582, 0.0903692069841348, 0.120210063927165,
    0.0738250367080169, 0.163969292056753, 0.153920088999047, 0.0651582637005772,
    0.11302388168362, 0.125735694098496, 0.0691133224538542, 0.125028118954425,
    0.16463596690348, 0.0764835560354523, 0.106880657022377, 0.0704344020581031,
    0.0543360450230474, 0.186292674347743, 0.0834693268220059,
    0.0604465494464146, 0.10554321729919, 0.149228824893557, 0.097207736700246,
    0.187634204100664, 0.165274011542064, 0.0807167368106766, 0.117735595937783,
    0.163106295782771, 0.0882669317005937, 0.12972347308965, 0.172173891704193,
    0.0858865343951052, 0.130336977549827, 0.0659680895880113,
    0.0398900600007362, 0.195515691399076, 0.0951381816545805,
    0.0666879348212863, 0.108708900313705, 0.174869221299239, 0.10156770839724,
    0.193208914628809, 0.164541896219586, 0.0867495306690882, 0.115461539405392,
    0.17029656805605, 0.0958293966797138, 0.127584387538498, 0.192648580555182,
    0.101289586375293, 0.12232460929991, 0.0640907659398685, 0.0361026924665743,
    0.142733857675146, 0.0942179249643148, 0.0622093522619911, 0.133682621872661,
    0.186730307529336, 0.103972645881136, 0.161290322580646, 0.154198211020994,
    0.0908232002846663, 0.134692859217087, 0.216203061796259, 0.112500357877602,
    0.123367566882211, 0.153629696887897, 0.0907250395710378, 0.164770937884719,
    0.0740949786704951, 0.0428021611717118, 0.14920428471515, 0.0950645611193595,
    0.0645202190619927, 0.143486423146296, 0.179409154304552, 0.0988682887724596,
    0.122058757367166, 0.130696900166464, 0.0776533045395243, 0.138893319754435,
    0.237970200043354, 0.12980527368434, 0.130173376360446, 0.143899516149483,
    0.0823404786152795, 0.131633516975669, 0.0704139519094305,
    0.0502582853777347, 0.122169188169998, 0.0863159875172294,
    0.0636081424311956, 0.153232964003648, 0.153625606858162, 0.103023758982728,
    0.12388291062876, 0.145269676110545, 0.0741399689975747, 0.136128459653902,
    0.246011198501414, 0.136394311586645, 0.129142688867348, 0.13026744704434,
    0.0761031832701424, 0.136304330932486, 0.0728884198988128,
    0.0554280829621632, 0.123363476852477, 0.0879847196489121,
    0.0616449281586278, 0.167511257806845, 0.146353533990192, 0.0997067448680354,
    0.126549610015665, 0.14950285688577, 0.076953909454922, 0.134112074994786,
    0.223777796864584, 0.112921630940257, 0.121776545315485, 0.121404352609644,
    0.0731583618612907, 0.117931917365039, 0.0804427048184642,
    0.0577512198513684, 0.160585998027891, 0.106818288534023, 0.0753243094417908,
    0.23691343637815, 0.284060495076131, 0.161435456124849, 0.277768529071529,
    0.127802891572437, 0.0785172474142752, 0.135166284623955, 0.155958799147981,
    0.0712989879069611, 0.15948042191175, 0.228679242061409, 0.121668865012998,
    0.107633597561756, 0.0458195136318816, 0.0471385214306753, 0.200145605058549,
    0.10097874411547, 0.0629087473465933, 0.267487944637358, 0.223912767845822,
    0.135277733469123, 0.250027607700708, 0.116921680020614, 0.0767698581168686,
    0.151515151515152, 0.177981733927206, 0.0872321541777609, 0.144598911234085,
    0.150578534705947, 0.106622985149102, 0.191785584281198, 0.0611745747391583,
    0.0538943218117197, 0.16919226002773, 0.0727575389473082, 0.0416405927271092,
    0.174407047939238, 0.0845450046421838, 0.053010875389064, 0.29079293406463,
    0.135281823498857, 0.112259046123266, 0.28801171384516, 0.12227961897283,
    0.0691010523646508, 0.114987095956188, 0.0726634682634144,
    0.0825777003398816, 0.197691587217839, 0.0698331676871292,
    0.0468144803412722, 0.149141181399246, 0.116299145624659, 0.0885478158205431,
    0.200936893019005, 0.312881644259943, 0.169161239542471, 0.333472978634269,
    0.165949397620952, 0.0959997968795622, 0.0869482423734623,
    0.0705843521092788, 0.0398116057940105, 0.125617295705272, 0.269845501517056,
    0.0798898071625344, 0.076563709994795, 0.0253138845514212, 0.03208033413312,
    0.121805175523626, 0.053984302465879, 0.0396651083653378, 0.22059575373113,
    0.0876697873593542, 0.0587450970768557, 0.285034172198432, 0.142206243839393,
    0.115612870505569, 0.33623725444484, 0.121383902460971, 0.0797637598825345,
    0.128590534853189, 0.0729252301664235, 0.0753751579773987, 0.189053444418541,
    0.0736164451915567, 0.0445240636899431, 0.185953201879777,
    0.0694159846542085, 0.0562747191172081, 0.260318122512751, 0.104054446475826,
    0.0760377427943901, 0.266878530206915, 0.148087706597627, 0.0982588743420167,
    0.304265492010127, 0.141539568992667, 0.0838496995873163, 0.212505674916256,
    0.138238914996912, 0.0905368982032498, 0.184488971234821, 0.0622952428864159,
    0.0358368405338307, 0.217246019378561, 0.0834775068814751,
    0.0649619422733204, 0.288608858186398, 0.144537560788067, 0.0904755477572323,
    0.279864374614004, 0.160795428982769, 0.0942833654400669, 0.296707117060741,
    0.130377877847172, 0.103649533532109, 0.237827049002646, 0.208047542505634,
    0.118508611557606, 0.209045509760857, 0.0667983656241182, 0.0453993300531296,
    0.256371243818942, 0.0966760328347589, 0.0619271402103094, 0.263254763862133,
    0.212640645897495, 0.10646756401919, 0.325770868354214, 0.186746667648274,
    0.0905982486492677, 0.203548509797666, 0.0909827114443122,
    0.0810971095759866, 0.209888055886166, 0.276927733264622, 0.149629647807539,
    0.18056663271942, 0.0584833351738468, 0.0484791224432202, 0.164688358236745,
    0.191220965414514, 0.141959423065414, 0.109541763919644, 0.111643093209914,
    0.0705740751823701, 0.106855254320692, 0.0752156189944209,
    0.0618429189857762, 0.204207978401526, 0.167853651724619, 0.0981174483478634,
    0.136712749615975, 0.0932498121438213, 0.0702415863706187, 0.185422360537568,
    0.105013266303589, 0.0619759145104768 };

  //  Select 18(Torque) + 3 (Gyro)
  y = 0.0;
  for (j = 0; j < 18; j++) {
    d0 = 0.0;
    for (i1 = 0; i1 < 18; i1++) {
      d0 += -(data_TE[i1] - c[i1 + 18 * j]) * (data_TE[i1] - c[i1 + 18 * j]);
    }

    y += a[j] * std::exp(d0 / (2.0 * (dv0[j] * dv0[j])));
  }

  //  a signsum function
  WalkControls = (y >= 0.0) - (y < 0.0);

  //  if distance(d,1) <= distance(d,0),
  //      out = 1;
  //  else
  //      out = 0;
  //  end
  return WalkControls;
}

//
// File trailer for RBF2Test.cpp
//
// [EOF]
//
